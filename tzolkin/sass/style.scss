@font-face {
	font-family: 'icomoon';
	src:url('../resources/images/icons/icomoon.eot?-snzod2');
	src:url('../resources/images/icons/icomoon.eot?#iefix-snzod2') format('embedded-opentype'),
		url('../resources/images/icons/icomoon.woff?-snzod2') format('woff'),
		url('../resources/images/icons/icomoon.ttf?-snzod2') format('truetype'),
		url('../resources/images/icons/icomoon.svg?-snzod2#icomoon') format('svg');
	font-weight: normal;
	font-style: normal;
}

// Colors
$circle: #9FC6E7;
$gray: #7F8C8D;
$blue: #3498db;
$red: #e74c3c;
$yellow: #f1c40f;
$green: #2ecc71;
$orange: #e67e22;
$purple: #9b59b6;

.tzolkin-calendar {
	margin: 0 1em;
	font-size: 16px;

	&, * {
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		box-sizing: border-box;
		-webkit-tap-highlight-color: rgba(0,0,0,0);
		-webkit-user-select: none;
		-webkit-touch-callout: none;
		//-webkit-backface-visibility: hidden;
	}
	[class^="icon-"], [class*=" icon-"] {
		font-family: 'icomoon';
		speak: none;
		font-style: normal;
		font-weight: normal;
		font-variant: normal;
		text-transform: none;
		line-height: 1;

		/* Better Font Rendering =========== */
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}

	.icon-clock:before {
		content: "\e600";
	}
	.icon-location:before {
		content: "\e601";
	}
	.icon-list:before {
		content: "\e602";
	}
	.icon-grid:before {
		content: "\e603";
	}
	.icon-expand:before {
		content: "\e604";
	}
	.icon-collapse:before {
		content: "\e605";
	}

	a {text-decoration: none;}
	select, button, input {outline: none;}
	.tzolkin-title {
		padding-top: 0;
		text-align: center;
	}
	// Category Navigation
	.tzolkin-categories {
		.container {
			width: auto;
			position: relative;

			&:before {
				content: "";
				position: absolute;
				right: .5em;
				top: 50%;
				margin-top: -2px;
				border-left: 4px solid transparent;
				border-right: 4px solid transparent;
				border-top: 5px solid #BBB;
				pointer-events: none;
			}
		}
		.container, .clear {
			display: inline-block;
			vertical-align: middle;
		}
		select, .clear {
			border: 1px solid #DDD;
			color: #555;
			font-size: .75em;
			-webkit-border-radius: 5px;
			-moz-border-radius: 5px;
			border-radius: 5px;
		}
		select {
			height: auto;
			padding: .25em 1.75em .25em .5em;
			appearance: none;
			-webkit-appearance: none;
			display: block;
			float: left;
			overflow: hidden;
			background-color: #fff;
		}
		.clear {
			width: auto;
			height: auto;
			margin-left: .5em;
			padding: .25em .5em;
			background-color: transparent;
			cursor: pointer;

			&:hover {
				background-color: $red;
				color: #fff;
				border-color: #fff;
			}
		}
	}

	// Format Navigation
	form {padding: 0;}
	.format {
		margin-top: -1.55em;
		float: right;

		input[type="radio"] {display: none;}
		label {
			$c_link: #aaa;
			$c_active: #555;
			$c_hover: mix($c_link, $c_active, $weight:50%);

			color: $c_link;
			cursor: pointer;
			display: inline-block;
			position: relative;

			//&:first-child {margin-right: .375em;}
			i {
				margin: 0em .125em;
				display: inline-block;
				vertical-align: middle;
				border: 1px solid #DDD;
				-webkit-border-radius: 4px;
				-moz-border-radius: 4px;
				border-radius: 4px;
			}
			&.expand-collapse i {
				display: none;
				padding: .19em;
			}
			&.list, &.grid {

				i {font-size: 1.375em;}
			}
			// &.list, &.grid {
			// 	&:before, &:after {
			// 		content: "";
			// 		display: block;
			// 		position: absolute;
			// 		-webkit-box-sizing: border-box;
			// 		-moz-box-sizing: border-box;
			// 		box-sizing: border-box;
			// 	}
			// }

			// // List Format
			// &.list {

			// 	&:before, &:after {
			// 		width: 14px;
			// 		border-bottom: solid 3px $c_link;
			// 		left: -1px;
			// 	}
			// 	&:before {
			// 		border-top: solid 3px $c_link;
			// 		height: 8px;
			// 		top: 1px;
			// 	}
			// 	&:after {
			// 		top: 11px;
			// 	}
			// }
			// // Grid Format
			// &.grid {
			// 	&:before, &:after {
			// 		width: 14px;
			// 		height: 6px;
			// 		top: 50%;
			// 		left: -1px;
			// 		border-left: solid 6px $c_link;
			// 		border-right: solid 6px $c_link;
			// 	}
			// 	&:before {
			// 		margin-top: -8px;
			// 	}
			// }
			// Style for hover
			&:hover i {
				color: $c_hover;
				border-color: lighten($c_hover, 20%);
			}
			// Styles for current format
			&.active i {
				color: $c_active;
				border-color: $c_active;
			}
		}
	}
	// Month Navigation
	.month-navigation {
		margin-top: 2em;
		font-size: .875em;

		button {
			height: auto;
			margin: 0;
			padding: 0;
			-webkit-appearance: none;
			background-color: transparent;
			border: none;
			color: #0E325D;
			cursor: pointer;
			font-size: 1em;
		}
		.next-month {float: right;}
	}
}

@media (min-width: 500px) {
	.tzolkin-calendar .format label.expand-collapse.show {
		i {display: inline-block;}
	}
}

////////////////////////////////////////////////////////////////////////////////
//  GRID STYLES  ///////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

.tzolkin-grid {
	$bwidth: 1px;
	$bcolor: #DDD;
	$bgcolor: #f9f9f9;
	$open-color: #EEE;

	width: 100%;
	margin-top: 1em;

	// Animation Setup
	.tzolkin-row {transition: height .15s ease-in-out;}
	.cell,.cell:after, .date-top {transition: background-color .15s ease-in-out;}
	.details, .tzolkin-row:after {transition: opacity .15s ease-in-out, z-index .15s ease-in-out;}

	// Row setup
	.tzolkin-row {
		display: table;
		width: 100%;
		table-layout: fixed;
		position: relative;
		cursor: pointer;
		overflow: hidden;

		&:last-child .cell {border-bottom: $bwidth solid $bcolor;}
		@media (max-width: 500px) {
			&:last-child {
				border-bottom: $bwidth solid $bcolor;

				.cell {border-bottom: none;}
			}
		}
	}

	// For the Weekday Header
	.tzolkin-row.days {
		height: 2em;
		font-size: .875em;

		&, &:hover {
			.cell {
				padding: .5em;
				background-color: transparent;
			}
		}
		.full-day {display: none;}
	}
	// Standard Cell Styles
	.cell {
		$width: (100/7) * 1%;

		width: $width;
		height: 100%;
		display: inline-block;
		display: table-cell;
		background-color: $open-color;
		border-top: $bwidth solid $bcolor;
		border-right: $bwidth solid $bcolor;
		text-align: center;
		vertical-align: top;
		font-size: .875em;

		&.offset {
			background-color: $bgcolor;

			&.offset-1 {width: $width;}
			&.offset-2 {width: $width*2;}
			&.offset-3 {width: $width*3;}
			&.offset-4 {width: $width*4;}
			&.offset-5 {width: $width*5;}
			&.offset-6 {width: $width*6;}
		}
		// Styles for past days/events
		&.past {

			.number {color: #777;}
		}
		&.present {

			.number {font-weight: bold;}
		}

		// On mobile, cells open. On desktop, rows open.
		&.open {
			position: static;

			&:after {display: none;}
			.details {
				opacity: 1;
				z-index: 2;
			}
			.date-top {
				background-color: $open-color;

				&:after {content: " ";}
			}
		}
	}
	.cell:first-child, .list.message + .cell {border-left: $bwidth solid $bcolor;}
	.inner {background-color: #fff;}
	.date-top {
		padding: 1em 0;
		position: relative;
		white-space: normal;

		&:after {
			width: 100%;
			height: 1px;
			position: absolute;
			left: 0;
			bottom: -1px;
			background-color: $open-color;
			z-index: 3;
		}
	}

	// Name of the day, display on list.
	.day {display: none;}

	// Number of the day
	.number {
		display: inline-block;
		position: relative;
		font-size: 1.25em;
	}

	// Circles on the main calendar
	.circles {
		margin-top: .5em;
		padding: 0 1.25em;
		line-height: .5em;
		text-align: center;
		overflow: hidden;

		.circle {
			width: .5em;
			height: .5em;
			display: none;
			background-color: $circle;
			border-radius: 100%;

			&:first-child {display: inline-block;}
		}
	}

	// Details contains multiple events for a given day.
	.details {
		position: relative;
		opacity: 0;
		background-color: $open-color;
		border-top: 1px solid $bcolor;
		text-align: left;
		white-space: normal;
	}

	// An event contains time and text
	.event {
		padding: .5em;
		border-bottom: 1px solid $bcolor;
	}
	// Meta contains time & location. For now.
	.meta {
		margin-right: 1em;

		.location {margin-left: .5em;}
		i {
			margin-right: .25em;
			font-size: .75em;
		}
	}
	.meta, .text {
		display: inline;
		font-size: .875em;
	}

	// Text contains titles and descriptions
	.description {display: none;}


////////////////////////////////////////////////////////////////////////////////
// DESKTOP GRID STYLES  ///////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


@media (min-width: 500px) {
	$bgcolor: #f9f9f9;

	.tzolkin-row {
		background-color: transparent;

		// Hover Effects
		&:hover, &.open {
			&:after {opacity: 1;}

			.cell {
				background-color: $bgcolor;

				&.past:after {background-color: rgba(255,255,255,0);}
			}
		}
		// Open Row
		&.open {

			.cell:after {display: none;}
			.details {opacity: 1;}
		}
	}
	.tzolkin-row.days .full-day {display: inline;}
	.cell, .inner, .details {background-color: transparent;}
	.cell {
		position: relative;
		font-size: 1em;

		&.past:after {
			width: 100%;
			height: 100%;
			position: absolute;
			top: 0;
			left: 0;
			content: " ";
			display: block;
			background-color: rgba(#FFF, .4);
		}
	}
	.details {
		width: 100%;
		height: auto;
		position: relative;
		left: 0;
		padding: .75em 0 1em;
		border-top: 1px dotted $bcolor;
		opacity: 0;
		visibility: visible;
		background-color: transparent;
	}
	.event {
		margin: 0;
		padding: 0;
		border: 0;
	}
	// Hide times on grid.
	.meta {display: none;}
	.text {font-size: 1em;}

	.titles {
		margin: 0 .5em;

		.title {
			display: block;
			margin-bottom: .5em;
			padding-bottom: 1px;
			overflow: hidden;
			-ms-text-overflow: ellipsis;
			text-overflow: ellipsis;
			-ms-word-break: normal;
			word-break: normal;
		}
	}
	.title {font-size: .75em;}
	.circles .circle {
		display: inline-block;
		margin: 0 .125em;

		@each $class, $color in (gray: $gray, blue: $blue, red: $red, green: $green, yellow: $yellow, orange: $orange, purple: $purple) {
			&.#{$class} {background-color: $color;}
		}
	}

	// Rectangles in the details view
	.rectangles {
		$height: 1.25em;

		width: 100%;
		margin-bottom: .5em;
		display: inline-block;

		.rectangle {
			$lighten: 30%;

			width: 100%;
			height: $height;
			margin-top: 1px;
			display: block;
			position: relative;

			&:before, &:after {
				height: $height;
				content: " ";
				display: block;
				position: absolute;
				top: 0;
			}
			&:after {
				width: 1px;
				right: -1px;
			}
			@at-root .tzolkin-row .cell {
				&:last-child, &:first-child {
					.rectangles .rectangle {

						// Using both before & after because after is already taken.
						&:before, &:after {
							width: 0;
							height: 0;
							border-style: solid;
							border-color: transparent;
							border-top-width: $height/2;
							border-bottom-width: $height/2;
						}
					}
				}
				&:last-child .rectangles .event:not(.last-day) .rectangle {

					&:after {
						background-color: transparent;
						right: 0;
						border-top-color: $bgcolor;
						border-bottom-color: $bgcolor;
						border-left-width: .35em;
						border-right-width: 0;
					}
					// @each $class, $color in (gray: $gray, blue: $blue, red: $red, green: $green, yellow: $yellow, orange: $orange, purple: $purple) {
					// 	&.#{$class}:after {border-left-color: lighten($color, $lighten);}
					// }
				}
				&:first-child .rectangles .event:not(.day-0) .rectangle {

					&:before {
						background-color: transparent;
						left: 0;
						border-top-color: $bgcolor;
						border-bottom-color: $bgcolor;
						border-right-width: .35em;
						border-left-width: 0;
					}
					// @each $class, $color in (gray: $gray, blue: $blue, red: $red, green: $green, yellow: $yellow, orange: $orange, purple: $purple) {
					// 	&.#{$class}:before {border-right-color: lighten($color, $lighten);}
					// }
				}
			}
			// Why not try some løveli colors?
			@each $class, $color in (gray: $gray, blue: $blue, red: $red, green: $green, yellow: $yellow, orange: $orange, purple: $purple) {
				&.#{$class} {
					background-color: lighten($color, $lighten);

					&:after {
						background-color: lighten($color, $lighten);
					}
				}
			}

			.title {
				display: none;
				position: relative;
				left: .75em;
				color: #1d1d1d;
				line-height: $height + .5;
				white-space: nowrap;
				z-index: 2;
			}
		}
		.duration-1 {
			.title {
				padding-right: .75em;
				overflow: hidden;
				text-overflow: ellipsis;

				&:before, &:after {display: none;}
			}
		}
		// Levels
		@for $i from 2 through 20 {
			$base: .05;
			// If the first rectangle isn't at level-1, here's how much of a margin to give it.
			// the pixel way -> .level-#{$i}:first-child {margin-top: $height * ($i - 1) + $i;}
			.level-#{$i}:first-child {margin-top: $height * ($i - 1) + ($base * ($i + 1));}

			// If we skip from level-1 to level-3, then level-2 needs some top padding.
			// If you somehow skip from level-0 to level-3, you're on your own.
			//.level-#{$i - 1} + .level-#{$i + 1} {margin-top: $height * ($i - 1) + $i;}
			.level-#{$i - 1} + .level-#{$i + 1} {margin-top: $height * ($i - 1) + ($base * ($i + 1));}
		}
	}
	.event.last-day .rectangle:after {display: none;}
	.cell.weekday-0, .event.day-0 { .rectangle .title {display: block;} }
	}
	.list.message {display: none;}
}

////////////////////////////////////////////////////////////////////////////////
//  LIST STYLES  ///////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

.tzolkin-list {

	// First, hide the stuff we don't need: the weekday header, offset cells, empty cells.
	.days, .offset, .no-events {display: none;}

	.cell {
		margin-top: 1.5em;
		padding-bottom: 1.5em;
		overflow: hidden;
	}
	.date-top {height: auto !important;}
	.list.message {
		margin-top: 1.5em;
		padding: 2em;
		display: block;
		background-color: #f9f9f9;
		border: 1px solid #ddd;
		text-align: center;
	}
	.date {
		width: 2.675em;
		margin-right: 1em;
		float: left;
		font-size: 1.125em;
		font-weight: bold;
		text-align: center;

		.day {
			padding: .375em 0;
			background-color: #ccc;
			font-size: .675em;
			text-transform: uppercase;
		}
		.number {
			padding: .5em 0 .375em;
			background-color: #e1e1e1;
			font-size: 1.125em;
		}
	}
	.details {
		width: auto;
		overflow: hidden;
	}
	.event {
		margin-bottom: 1em;
		padding-bottom: 1em;
		border-bottom: 1px dotted #CCC;
	}
	.text {
		width: 55%;
		display: inline-block;
		vertical-align: top;
	}
	.meta {
		width: 35%;
		display: inline-block;
		font-size: .875em;
		vertical-align: baseline;

		span {
			margin-bottom: .375em;
			display: block;

			&.location {margin-left: 0;}
			i {
				margin-right: .375em;
				font-size: .75em;
			}
		}
	}
	.title {font-weight: bold;}
	.description {
		margin-top: .5em;
		font-size: .875em;
		font-style: italic;
		line-height: 1.4em;
	}

	@media (min-width: 500px) {
		.text {width: 75%;}
		.meta {width: 20%;}
	}
}